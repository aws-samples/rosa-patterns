name: Terraform Deployment
run-name: ${{ gitea.actor }} is deploying ðŸš€
on: [push]

jobs:
  Terraform-Deploy-Actions:
    env:
      AWS_REGION: us-west-2
      SECRET_NAME: /team/rosa_metadata
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Get Terraform Secret Input Values
        run: |
          # Get secret and parse JSON values
          SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id $SECRET_NAME --query SecretString --output text)

          # Extract individual values and set as environment variables
          echo "OPENSHIFT_VERSION=$(echo $SECRET_JSON | jq -r '.openshift_version')" >> $GITHUB_ENV
          echo "AWS_BILLING_ACCOUNT_ID=$(echo $SECRET_JSON | jq -r '.aws_billing_account_id')" >> $GITHUB_ENV
          echo "RHCS_TOKEN=$(echo $SECRET_JSON | jq -r '.rosa_token')" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$(echo $SECRET_JSON | jq -r '.cluster_name')" >> $GITHUB_ENV

      - name: Echo Terraform Secret Input Values
        run: |
          # Print values (except sensitive ones) for debugging
          echo "OpenShift Version: $OPENSHIFT_VERSION"
          echo "AWS Billing Account: $AWS_BILLING_ACCOUNT_ID"
          echo "ROSA Cluster Name: $CLUSTER_NAME"
          echo "ROSA Token: ***********"

      - name: Get tfstate bucket name
        run: |
          TFSTATE_BUCKET_NAME=$(aws s3 ls | grep tfstate | awk '{print $3}')
          echo "TFSTATE_BUCKET_NAME=$TFSTATE_BUCKET_NAME" >> $GITHUB_ENV
          echo "Found tfstate bucket: $TFSTATE_BUCKET_NAME"

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}
            
      - name: Setup Terraform
        run: |
          wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform
          terraform version

      - name: Terraform Init
        working-directory: ./src/examples/rosa-hcp-public
        run: |
          if [ -z "$TFSTATE_BUCKET_NAME" ]; then
            echo "Error: Could not find tfstate bucket"
            exit 1
          fi
          terraform init -backend-config="bucket=${TFSTATE_BUCKET_NAME}"

      - name: Terraform Validate
        working-directory: ./src/examples/rosa-hcp-public
        run: |
          terraform validate

      - name: Terraform Plan
        working-directory: ./src/examples/rosa-hcp-public
        run: |
          terraform plan  \
            -var="openshift_version=${OPENSHIFT_VERSION}" \
            -var="aws_billing_account_id=${AWS_BILLING_ACCOUNT_ID}" \
            -var="cluster_name=${CLUSTER_NAME}" \
            -out=tfplan
        
      - name: Terraform Apply
        working-directory: ./src/examples/rosa-hcp-public
        if: github.ref == 'refs/heads/main' # Only apply on main branch
        run: |
          terraform apply -auto-approve tfplan

      - name: Clean up plan file
        working-directory: ./src/examples/rosa-hcp-public
        if: always()
        run: |
          rm -f tfplan
